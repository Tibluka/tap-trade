{"ast":null,"code":"import _asyncToGenerator from \"/Users/lucasgomes/Desktop/Projects/Studying/TapTrade/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment';\nimport { TradingHistory } from '../models/history';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this.accountMode = 'PRACTICE';\n    this.accountBalance = 0;\n    this.history = new TradingHistory();\n  }\n\n  get mode() {\n    return this.accountMode;\n  }\n\n  get balance() {\n    return this.accountBalance;\n  }\n\n  setAccountMode(mode) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const newMode = yield _this.http.post(`${environment.url}/changeAccount`, {\n        username: 'lugomes441@hotmail.com',\n        password: 'Lukkao@2020',\n        mode\n      }).toPromise();\n      _this.accountMode = newMode.mode;\n\n      _this.setAccountBalance();\n    })();\n  }\n\n  setAccountBalance() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const account = yield _this2.http.post(`${environment.url}/balance`, {\n        username: 'lugomes441@hotmail.com',\n        password: 'Lukkao@2020'\n      }).toPromise();\n      _this2.accountBalance = account.balance;\n    })();\n  }\n\n  getHistory() {\n    return this.http.get(`${environment.url}/get-history`);\n  }\n\n}\n\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/lucasgomes/Desktop/Projects/Studying/TapTrade/src/app/services/account.service.ts"],"names":["environment","TradingHistory","i0","i1","AccountService","constructor","http","accountMode","accountBalance","history","mode","balance","setAccountMode","newMode","post","url","username","password","toPromise","setAccountBalance","account","getHistory","get","ɵfac","AccountService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,WAAT,QAA4B,8BAA5B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,WAAL,GAAmB,UAAnB;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACA,SAAKC,OAAL,GAAe,IAAIR,cAAJ,EAAf;AACH;;AACO,MAAJS,IAAI,GAAG;AACP,WAAO,KAAKH,WAAZ;AACH;;AACU,MAAPI,OAAO,GAAG;AACV,WAAO,KAAKH,cAAZ;AACH;;AACKI,EAAAA,cAAc,CAACF,IAAD,EAAO;AAAA;;AAAA;AACvB,YAAMG,OAAO,SAAS,KAAI,CAACP,IAAL,CAAUQ,IAAV,CAAgB,GAAEd,WAAW,CAACe,GAAI,gBAAlC,EAAmD;AAAEC,QAAAA,QAAQ,EAAE,wBAAZ;AAAsCC,QAAAA,QAAQ,EAAE,aAAhD;AAA+DP,QAAAA;AAA/D,OAAnD,EAA0HQ,SAA1H,EAAtB;AACA,MAAA,KAAI,CAACX,WAAL,GAAmBM,OAAO,CAACH,IAA3B;;AACA,MAAA,KAAI,CAACS,iBAAL;AAHuB;AAI1B;;AACKA,EAAAA,iBAAiB,GAAG;AAAA;;AAAA;AACtB,YAAMC,OAAO,SAAS,MAAI,CAACd,IAAL,CAAUQ,IAAV,CAAgB,GAAEd,WAAW,CAACe,GAAI,UAAlC,EAA6C;AAAEC,QAAAA,QAAQ,EAAE,wBAAZ;AAAsCC,QAAAA,QAAQ,EAAE;AAAhD,OAA7C,EAA8GC,SAA9G,EAAtB;AACA,MAAA,MAAI,CAACV,cAAL,GAAsBY,OAAO,CAACT,OAA9B;AAFsB;AAGzB;;AACDU,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKf,IAAL,CAAUgB,GAAV,CAAe,GAAEtB,WAAW,CAACe,GAAI,cAAjC,CAAP;AACH;;AAxBuB;;AA0B5BX,cAAc,CAACmB,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAIrB,cAAV,EAA0BF,EAAE,CAACwB,QAAH,CAAYvB,EAAE,CAACwB,UAAf,CAA1B,CAAP;AAA+D,CAA1H;;AACAvB,cAAc,CAACwB,KAAf,GAAuB,aAAc1B,EAAE,CAAC2B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE1B,cAAT;AAAyB2B,EAAAA,OAAO,EAAE3B,cAAc,CAACmB,IAAjD;AAAuDS,EAAAA,UAAU,EAAE;AAAnE,CAAtB,CAArC","sourcesContent":["import { environment } from 'src/environments/environment';\nimport { TradingHistory } from '../models/history';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n    constructor(http) {\n        this.http = http;\n        this.accountMode = 'PRACTICE';\n        this.accountBalance = 0;\n        this.history = new TradingHistory();\n    }\n    get mode() {\n        return this.accountMode;\n    }\n    get balance() {\n        return this.accountBalance;\n    }\n    async setAccountMode(mode) {\n        const newMode = await this.http.post(`${environment.url}/changeAccount`, { username: 'lugomes441@hotmail.com', password: 'Lukkao@2020', mode }).toPromise();\n        this.accountMode = newMode.mode;\n        this.setAccountBalance();\n    }\n    async setAccountBalance() {\n        const account = await this.http.post(`${environment.url}/balance`, { username: 'lugomes441@hotmail.com', password: 'Lukkao@2020' }).toPromise();\n        this.accountBalance = account.balance;\n    }\n    getHistory() {\n        return this.http.get(`${environment.url}/get-history`);\n    }\n}\nAccountService.ɵfac = function AccountService_Factory(t) { return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient)); };\nAccountService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AccountService, factory: AccountService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}