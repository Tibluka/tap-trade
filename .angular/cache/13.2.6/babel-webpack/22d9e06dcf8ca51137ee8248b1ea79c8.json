{"ast":null,"code":"import _asyncToGenerator from \"/Users/lucasgomes/Desktop/Projects/Studying/TapTrade/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment';\nimport { TradingHistory } from '../models/history';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this.accountMode = 'PRACTICE';\n    this.accountBalance = 0;\n    this.history = new TradingHistory();\n  }\n\n  get mode() {\n    return this.accountMode;\n  }\n\n  get balance() {\n    return this.accountBalance;\n  }\n\n  get tradingHistory() {\n    return this.history;\n  }\n\n  setAccountMode(mode) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const newMode = yield _this.http.post(`${environment.url}/changeAccount`, {\n        username: 'lugomes441@hotmail.com',\n        password: 'Lukkao@2020',\n        mode\n      }).toPromise();\n      _this.accountMode = newMode.mode;\n\n      _this.getAccountBalance();\n    })();\n  }\n\n  getAccountBalance() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const account = yield _this2.http.post(`${environment.url}/balance`, {\n        username: 'lugomes441@hotmail.com',\n        password: 'Lukkao@2020'\n      }).toPromise();\n      _this2.accountBalance = account.balance;\n    })();\n  }\n\n  getHistory() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.history = yield _this3.http.get(`${environment.url}/get-history`).toPromise();\n    })();\n  }\n\n}\n\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/lucasgomes/Desktop/Projects/Studying/TapTrade/src/app/services/account.service.ts"],"names":["environment","TradingHistory","i0","i1","AccountService","constructor","http","accountMode","accountBalance","history","mode","balance","tradingHistory","setAccountMode","newMode","post","url","username","password","toPromise","getAccountBalance","account","getHistory","get","ɵfac","AccountService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,WAAT,QAA4B,8BAA5B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,WAAL,GAAmB,UAAnB;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACA,SAAKC,OAAL,GAAe,IAAIR,cAAJ,EAAf;AACH;;AACO,MAAJS,IAAI,GAAG;AACP,WAAO,KAAKH,WAAZ;AACH;;AACU,MAAPI,OAAO,GAAG;AACV,WAAO,KAAKH,cAAZ;AACH;;AACiB,MAAdI,cAAc,GAAG;AACjB,WAAO,KAAKH,OAAZ;AACH;;AACKI,EAAAA,cAAc,CAACH,IAAD,EAAO;AAAA;;AAAA;AACvB,YAAMI,OAAO,SAAS,KAAI,CAACR,IAAL,CAAUS,IAAV,CAAgB,GAAEf,WAAW,CAACgB,GAAI,gBAAlC,EAAmD;AAAEC,QAAAA,QAAQ,EAAE,wBAAZ;AAAsCC,QAAAA,QAAQ,EAAE,aAAhD;AAA+DR,QAAAA;AAA/D,OAAnD,EAA0HS,SAA1H,EAAtB;AACA,MAAA,KAAI,CAACZ,WAAL,GAAmBO,OAAO,CAACJ,IAA3B;;AACA,MAAA,KAAI,CAACU,iBAAL;AAHuB;AAI1B;;AACKA,EAAAA,iBAAiB,GAAG;AAAA;;AAAA;AACtB,YAAMC,OAAO,SAAS,MAAI,CAACf,IAAL,CAAUS,IAAV,CAAgB,GAAEf,WAAW,CAACgB,GAAI,UAAlC,EAA6C;AAAEC,QAAAA,QAAQ,EAAE,wBAAZ;AAAsCC,QAAAA,QAAQ,EAAE;AAAhD,OAA7C,EAA8GC,SAA9G,EAAtB;AACA,MAAA,MAAI,CAACX,cAAL,GAAsBa,OAAO,CAACV,OAA9B;AAFsB;AAGzB;;AACKW,EAAAA,UAAU,GAAG;AAAA;;AAAA;AACf,MAAA,MAAI,CAACb,OAAL,SAAqB,MAAI,CAACH,IAAL,CAAUiB,GAAV,CAAe,GAAEvB,WAAW,CAACgB,GAAI,cAAjC,EAAgDG,SAAhD,EAArB;AADe;AAElB;;AA3BuB;;AA6B5Bf,cAAc,CAACoB,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAItB,cAAV,EAA0BF,EAAE,CAACyB,QAAH,CAAYxB,EAAE,CAACyB,UAAf,CAA1B,CAAP;AAA+D,CAA1H;;AACAxB,cAAc,CAACyB,KAAf,GAAuB,aAAc3B,EAAE,CAAC4B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE3B,cAAT;AAAyB4B,EAAAA,OAAO,EAAE5B,cAAc,CAACoB,IAAjD;AAAuDS,EAAAA,UAAU,EAAE;AAAnE,CAAtB,CAArC","sourcesContent":["import { environment } from 'src/environments/environment';\nimport { TradingHistory } from '../models/history';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n    constructor(http) {\n        this.http = http;\n        this.accountMode = 'PRACTICE';\n        this.accountBalance = 0;\n        this.history = new TradingHistory();\n    }\n    get mode() {\n        return this.accountMode;\n    }\n    get balance() {\n        return this.accountBalance;\n    }\n    get tradingHistory() {\n        return this.history;\n    }\n    async setAccountMode(mode) {\n        const newMode = await this.http.post(`${environment.url}/changeAccount`, { username: 'lugomes441@hotmail.com', password: 'Lukkao@2020', mode }).toPromise();\n        this.accountMode = newMode.mode;\n        this.getAccountBalance();\n    }\n    async getAccountBalance() {\n        const account = await this.http.post(`${environment.url}/balance`, { username: 'lugomes441@hotmail.com', password: 'Lukkao@2020' }).toPromise();\n        this.accountBalance = account.balance;\n    }\n    async getHistory() {\n        this.history = await this.http.get(`${environment.url}/get-history`).toPromise();\n    }\n}\nAccountService.ɵfac = function AccountService_Factory(t) { return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient)); };\nAccountService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AccountService, factory: AccountService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}